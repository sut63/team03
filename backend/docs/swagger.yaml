basePath: /api/v1
definitions:
  controllers.Queue:
    properties:
      dental:
        type: string
      dentist:
        type: integer
      patient:
        type: integer
      phone:
        type: string
      queueID:
        type: string
      queueTime:
        type: string
    type: object
  ent.Appointment:
    properties:
      AppointID:
        description: AppointID holds the value of the "AppointID" field.
        type: string
      Datetime:
        description: Datetime holds the value of the "Datetime" field.
        type: string
      Detail:
        description: Detail holds the value of the "Detail" field.
        type: string
      Remark:
        description: Remark holds the value of the "Remark" field.
        type: string
      edges:
        $ref: '#/definitions/ent.AppointmentEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the AppointmentQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.AppointmentEdges:
    properties:
      dentist:
        $ref: '#/definitions/ent.Dentist'
        description: Dentist holds the value of the dentist edge.
        type: object
      nurse:
        $ref: '#/definitions/ent.Nurse'
        description: Nurse holds the value of the nurse edge.
        type: object
      patient:
        $ref: '#/definitions/ent.Patient'
        description: Patient holds the value of the patient edge.
        type: object
      room:
        $ref: '#/definitions/ent.Room'
        description: Room holds the value of the room edge.
        type: object
    type: object
  ent.Degree:
    properties:
      edges:
        $ref: '#/definitions/ent.DegreeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the DegreeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
    type: object
  ent.DegreeEdges:
    properties:
      dentists:
        description: Dentists holds the value of the dentists edge.
        items:
          $ref: '#/definitions/ent.Dentist'
        type: array
    type: object
  ent.Dentalexpense:
    properties:
      AddedTime:
        description: AddedTime holds the value of the "AddedTime" field.
        type: string
      Amount:
        description: Amount holds the value of the "Amount" field.
        type: integer
      Name:
        description: Name holds the value of the "Name" field.
        type: string
      Phone:
        description: Phone holds the value of the "Phone" field.
        type: string
      Tax:
        description: Tax holds the value of the "Tax" field.
        type: string
      edges:
        $ref: '#/definitions/ent.DentalexpenseEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the DentalexpenseQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.DentalexpenseEdges:
    properties:
      medicalfile:
        $ref: '#/definitions/ent.Medicalfile'
        description: Medicalfile holds the value of the medicalfile edge.
        type: object
      nurse:
        $ref: '#/definitions/ent.Nurse'
        description: Nurse holds the value of the nurse edge.
        type: object
      pricetype:
        $ref: '#/definitions/ent.Pricetype'
        description: Pricetype holds the value of the pricetype edge.
        type: object
    type: object
  ent.Dentist:
    properties:
      age:
        description: Age holds the value of the "age" field.
        type: integer
      birthday:
        description: Birthday holds the value of the "birthday" field.
        type: string
      cardid:
        description: Cardid holds the value of the "cardid" field.
        type: string
      edges:
        $ref: '#/definitions/ent.DentistEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the DentistQuery when eager-loading is set.
        type: object
      email:
        description: Email holds the value of the "email" field.
        type: string
      experience:
        description: Experience holds the value of the "experience" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
      password:
        description: Password holds the value of the "password" field.
        type: string
      tel:
        description: Tel holds the value of the "tel" field.
        type: string
    type: object
  ent.DentistEdges:
    properties:
      appointment:
        description: Appointment holds the value of the appointment edge.
        items:
          $ref: '#/definitions/ent.Appointment'
        type: array
      degree:
        $ref: '#/definitions/ent.Degree'
        description: Degree holds the value of the degree edge.
        type: object
      expert:
        $ref: '#/definitions/ent.Expert'
        description: Expert holds the value of the expert edge.
        type: object
      gender:
        $ref: '#/definitions/ent.Gender'
        description: Gender holds the value of the gender edge.
        type: object
      medicalfiles:
        description: Medicalfiles holds the value of the medicalfiles edge.
        items:
          $ref: '#/definitions/ent.Medicalfile'
        type: array
      nurse:
        $ref: '#/definitions/ent.Nurse'
        description: Nurse holds the value of the nurse edge.
        type: object
      queue:
        description: Queue holds the value of the queue edge.
        items:
          $ref: '#/definitions/ent.Queue'
        type: array
    type: object
  ent.Disease:
    properties:
      edges:
        $ref: '#/definitions/ent.DiseaseEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the DiseaseQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
    type: object
  ent.DiseaseEdges:
    properties:
      patients:
        description: Patients holds the value of the patients edge.
        items:
          $ref: '#/definitions/ent.Patient'
        type: array
    type: object
  ent.Expert:
    properties:
      edges:
        $ref: '#/definitions/ent.ExpertEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ExpertQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
    type: object
  ent.ExpertEdges:
    properties:
      dentists:
        description: Dentists holds the value of the dentists edge.
        items:
          $ref: '#/definitions/ent.Dentist'
        type: array
    type: object
  ent.Gender:
    properties:
      edges:
        $ref: '#/definitions/ent.GenderEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the GenderQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
    type: object
  ent.GenderEdges:
    properties:
      dentists:
        description: Dentists holds the value of the dentists edge.
        items:
          $ref: '#/definitions/ent.Dentist'
        type: array
      patients:
        description: Patients holds the value of the patients edge.
        items:
          $ref: '#/definitions/ent.Patient'
        type: array
    type: object
  ent.MedicalCare:
    properties:
      edges:
        $ref: '#/definitions/ent.MedicalCareEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the MedicalCareQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
    type: object
  ent.MedicalCareEdges:
    properties:
      patients:
        description: Patients holds the value of the patients edge.
        items:
          $ref: '#/definitions/ent.Patient'
        type: array
    type: object
  ent.Medicalfile:
    properties:
      AddedTime:
        description: AddedTime holds the value of the "AddedTime" field.
        type: string
      Detial:
        description: Detial holds the value of the "Detial" field.
        type: string
      DrugAllergy:
        description: DrugAllergy holds the value of the "DrugAllergy" field.
        type: string
      Medno:
        description: Medno holds the value of the "Medno" field.
        type: string
      edges:
        $ref: '#/definitions/ent.MedicalfileEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the MedicalfileQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.MedicalfileEdges:
    properties:
      dentalexpenses:
        description: Dentalexpenses holds the value of the dentalexpenses edge.
        items:
          $ref: '#/definitions/ent.Dentalexpense'
        type: array
      dentist:
        $ref: '#/definitions/ent.Dentist'
        description: Dentist holds the value of the dentist edge.
        type: object
      nurse:
        $ref: '#/definitions/ent.Nurse'
        description: Nurse holds the value of the nurse edge.
        type: object
      patient:
        $ref: '#/definitions/ent.Patient'
        description: Patient holds the value of the patient edge.
        type: object
    type: object
  ent.Nurse:
    properties:
      edges:
        $ref: '#/definitions/ent.NurseEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the NurseQuery when eager-loading is set.
        type: object
      email:
        description: Email holds the value of the "email" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
      nurse_age:
        description: NurseAge holds the value of the "nurse_age" field.
        type: integer
      nurse_name:
        description: NurseName holds the value of the "nurse_name" field.
        type: string
      password:
        description: Password holds the value of the "password" field.
        type: string
    type: object
  ent.NurseEdges:
    properties:
      appointment:
        description: Appointment holds the value of the appointment edge.
        items:
          $ref: '#/definitions/ent.Appointment'
        type: array
      dentalexpenses:
        description: Dentalexpenses holds the value of the dentalexpenses edge.
        items:
          $ref: '#/definitions/ent.Dentalexpense'
        type: array
      dentists:
        description: Dentists holds the value of the dentists edge.
        items:
          $ref: '#/definitions/ent.Dentist'
        type: array
      medicalfiles:
        description: Medicalfiles holds the value of the medicalfiles edge.
        items:
          $ref: '#/definitions/ent.Medicalfile'
        type: array
      patients:
        description: Patients holds the value of the patients edge.
        items:
          $ref: '#/definitions/ent.Patient'
        type: array
      queue:
        description: Queue holds the value of the queue edge.
        items:
          $ref: '#/definitions/ent.Queue'
        type: array
    type: object
  ent.Patient:
    properties:
      Age:
        description: Age holds the value of the "Age" field.
        type: integer
      Birthday:
        description: Birthday holds the value of the "Birthday" field.
        type: string
      CardID:
        description: CardID holds the value of the "CardID" field.
        type: string
      Name:
        description: Name holds the value of the "Name" field.
        type: string
      PatientID:
        description: PatientID holds the value of the "PatientID" field.
        type: string
      Tel:
        description: Tel holds the value of the "Tel" field.
        type: string
      edges:
        $ref: '#/definitions/ent.PatientEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PatientQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.PatientEdges:
    properties:
      appointment:
        description: Appointment holds the value of the appointment edge.
        items:
          $ref: '#/definitions/ent.Appointment'
        type: array
      disease:
        $ref: '#/definitions/ent.Disease'
        description: Disease holds the value of the disease edge.
        type: object
      gender:
        $ref: '#/definitions/ent.Gender'
        description: Gender holds the value of the gender edge.
        type: object
      medicalcare:
        $ref: '#/definitions/ent.MedicalCare'
        description: Medicalcare holds the value of the medicalcare edge.
        type: object
      medicalfiles:
        description: Medicalfiles holds the value of the medicalfiles edge.
        items:
          $ref: '#/definitions/ent.Medicalfile'
        type: array
      nurse:
        $ref: '#/definitions/ent.Nurse'
        description: Nurse holds the value of the nurse edge.
        type: object
      queue:
        description: Queue holds the value of the queue edge.
        items:
          $ref: '#/definitions/ent.Queue'
        type: array
    type: object
  ent.Pricetype:
    properties:
      edges:
        $ref: '#/definitions/ent.PricetypeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PricetypeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
    type: object
  ent.PricetypeEdges:
    properties:
      dentalexpenses:
        description: Dentalexpenses holds the value of the dentalexpenses edge.
        items:
          $ref: '#/definitions/ent.Dentalexpense'
        type: array
    type: object
  ent.Queue:
    properties:
      Dental:
        description: Dental holds the value of the "Dental" field.
        type: string
      Phone:
        description: Phone holds the value of the "Phone" field.
        type: string
      QueueID:
        description: QueueID holds the value of the "QueueID" field.
        type: string
      QueueTime:
        description: QueueTime holds the value of the "QueueTime" field.
        type: string
      edges:
        $ref: '#/definitions/ent.QueueEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the QueueQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.QueueEdges:
    properties:
      dentist:
        $ref: '#/definitions/ent.Dentist'
        description: Dentist holds the value of the dentist edge.
        type: object
      nurse:
        $ref: '#/definitions/ent.Nurse'
        description: Nurse holds the value of the nurse edge.
        type: object
      patient:
        $ref: '#/definitions/ent.Patient'
        description: Patient holds the value of the patient edge.
        type: object
    type: object
  ent.Room:
    properties:
      edges:
        $ref: '#/definitions/ent.RoomEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the RoomQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
    type: object
  ent.RoomEdges:
    properties:
      appointment:
        description: Appointment holds the value of the appointment edge.
        items:
          $ref: '#/definitions/ent.Appointment'
        type: array
    type: object
  gin.H:
    additionalProperties: true
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for SUT SE 2563
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SUT SA Example API
  version: "1.0"
paths:
  /appointments:
    get:
      description: list Appointment entities
      operationId: list-Appointment
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Appointment'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List Appointment entities
    post:
      consumes:
      - application/json
      description: Create Appointment
      operationId: create-Appointment
      parameters:
      - description: Appointment entity
        in: body
        name: Appointment
        required: true
        schema:
          $ref: '#/definitions/ent.Appointment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Appointment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create Appointment
  /appointments/{id}:
    get:
      description: get Appointment by ID
      operationId: get-Appointment
      parameters:
      - description: Appointment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Appointment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a Appointment entity by ID
  /degrees:
    get:
      description: list degree entities
      operationId: list-degree
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Degree'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List degree entities
    post:
      consumes:
      - application/json
      description: Create degree
      operationId: create-degree
      parameters:
      - description: ' Degree entity'
        in: body
        name: degree
        required: true
        schema:
          $ref: '#/definitions/ent.Degree'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Degree'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create degree
  /degrees/{id}:
    get:
      description: get degree by ID
      operationId: get-degree
      parameters:
      - description: Degree ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Degree'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a Degree entity by ID
  /dentalexpenses:
    get:
      description: list Dentalexpense entities
      operationId: list-Dentalexpense
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Dentalexpense'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List Dentalexpense entities
    post:
      consumes:
      - application/json
      description: Create Dentalexpense
      operationId: create-Dentalexpense
      parameters:
      - description: Dentalexpense entity
        in: body
        name: Dentalexpense
        required: true
        schema:
          $ref: '#/definitions/ent.Dentalexpense'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Dentalexpense'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create Dentalexpense
  /dentalexpenses/{id}:
    get:
      description: get Dentalexpense by ID
      operationId: get-Dentalexpense
      parameters:
      - description: Dentalexpense ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Dentalexpense'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a Dentalexpense entity by ID
  /dentists:
    get:
      description: list dentist entities
      operationId: list-dentist
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Dentist'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List dentist entities
    post:
      consumes:
      - application/json
      description: Create dentist
      operationId: create-dentist
      parameters:
      - description: Dentist entity
        in: body
        name: dentist
        required: true
        schema:
          $ref: '#/definitions/ent.Dentist'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Dentist'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create dentist
  /dentists/{id}:
    get:
      description: get dentist by ID
      operationId: get-dentist
      parameters:
      - description: Dentist ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Dentist'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a dentist entity by ID
  /diseases:
    get:
      description: list disease entities
      operationId: list-disease
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Disease'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List disease entities
  /diseases/{id}:
    get:
      description: get disease by ID
      operationId: get-disease
      parameters:
      - description: Disease ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Disease'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a disease entity by ID
  /experts:
    get:
      description: list expert entities
      operationId: list-expert
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Expert'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List expert entities
    post:
      consumes:
      - application/json
      description: Create expert
      operationId: create-expert
      parameters:
      - description: ' Expert entity'
        in: body
        name: expert
        required: true
        schema:
          $ref: '#/definitions/ent.Expert'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Expert'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create expert
  /experts/{id}:
    get:
      description: get expert by ID
      operationId: get-expert
      parameters:
      - description: Expert ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Expert'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a expert entity by ID
  /genders:
    get:
      description: list gender entities
      operationId: list-gender
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Gender'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List gender entities
    post:
      consumes:
      - application/json
      description: Create gender
      operationId: create-gender
      parameters:
      - description: Gender entity
        in: body
        name: gender
        required: true
        schema:
          $ref: '#/definitions/ent.Gender'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Gender'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create gender
  /genders/{id}:
    get:
      description: get gender by ID
      operationId: get-gender
      parameters:
      - description: Gender ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Gender'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a gender entity by ID
  /medicalcares:
    get:
      description: list medicalcare entities
      operationId: list-medicalcare
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.MedicalCare'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List medicalcare entities
  /medicalcares/{id}:
    get:
      description: get medicalcare by ID
      operationId: get-medicalcare
      parameters:
      - description: MedicalCare ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.MedicalCare'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a medicalcare entity by ID
  /medicalfiles:
    get:
      description: list Medicalfile entities
      operationId: list-Medicalfile
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Medicalfile'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List Medicalfile entities
    post:
      consumes:
      - application/json
      description: Create medicalfile
      operationId: create-medicalfile
      parameters:
      - description: Medicalfile entity
        in: body
        name: Medicalfile
        required: true
        schema:
          $ref: '#/definitions/ent.Medicalfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Medicalfile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create medicalfile
  /medicalfiles/{id}:
    get:
      description: get Medicalfile by ID
      operationId: get-Medicalfile
      parameters:
      - description: Medicalfile ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Medicalfile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a Medicalfile entity by ID
  /nurses:
    get:
      description: list nurse entities
      operationId: list-nurse
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Nurse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List nurse entities
    post:
      consumes:
      - application/json
      description: Create nurse
      operationId: create-nurse
      parameters:
      - description: Nurse entity
        in: body
        name: nurse
        required: true
        schema:
          $ref: '#/definitions/ent.Nurse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Nurse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create nurse
  /nurses/{id}:
    get:
      description: get nurse by ID
      operationId: get-nurse
      parameters:
      - description: Nurse ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Nurse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a nurse entity by ID
  /patients:
    get:
      description: list patient entities
      operationId: list-patient
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Patient'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List patient entities
    post:
      consumes:
      - application/json
      description: Create patient
      operationId: create-patient
      parameters:
      - description: Patient entity
        in: body
        name: Patient
        required: true
        schema:
          $ref: '#/definitions/ent.Patient'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Patient'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create patient
  /patients/{id}:
    get:
      description: get patient by ID
      operationId: get-patient
      parameters:
      - description: Patient ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Patient'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a patient entity by ID
  /pricetypes:
    get:
      description: list pricetype entities
      operationId: list-pricetype
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Pricetype'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List pricetype entities
    post:
      consumes:
      - application/json
      description: Create pricetype
      operationId: create-pricetype
      parameters:
      - description: Pricetype entity
        in: body
        name: pricetype
        required: true
        schema:
          $ref: '#/definitions/ent.Pricetype'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Pricetype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create pricetype
  /pricetypes/{id}:
    get:
      description: get pricetype by ID
      operationId: get-pricetype
      parameters:
      - description: Pricetype ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Pricetype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a pricetype entity by ID
  /queues:
    get:
      description: list queue entities
      operationId: list-queue
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Queue'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List queue entities
    post:
      consumes:
      - application/json
      description: Create queue
      operationId: create-queue
      parameters:
      - description: Queue entity
        in: body
        name: queue
        required: true
        schema:
          $ref: '#/definitions/controllers.Queue'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Queue'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create queue
  /queues/{id}:
    get:
      description: get queue by ID
      operationId: get-queue
      parameters:
      - description: Queue ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Queue'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a queue entity by ID
  /rooms:
    get:
      description: list Room entities
      operationId: list-Room
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Room'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List Room entities
    post:
      consumes:
      - application/json
      description: Create Room
      operationId: create-Room
      parameters:
      - description: Room entity
        in: body
        name: Room
        required: true
        schema:
          $ref: '#/definitions/ent.Room'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Room'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create Room
  /rooms/{id}:
    get:
      description: get Room by ID
      operationId: get-Room
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Room'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a Room entity by ID
  /searchappointments:
    get:
      description: get Appointment by Search
      operationId: get-Appointment-by-search
      parameters:
      - description: Search Appointment
        in: query
        name: Appointment
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Appointment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a Appointment entity by Search
  /searchdentalexpenses:
    get:
      description: get Dentalexpense by Search
      operationId: get-Dentalexpense-by-search
      parameters:
      - description: Search Dentalexpense
        in: query
        name: Dentalexpense
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Dentalexpense'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a Dentalexpense entity by Search
  /searchdentists:
    get:
      description: get dentist by Search
      operationId: get-Dentist-by-search
      parameters:
      - description: Search Dentist
        in: query
        name: Dentist
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Dentist'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a Dentist entity by Search
  /searchmedicalfiles:
    get:
      description: get Medicalfile by Search
      operationId: get-Medicalfile-by-search
      parameters:
      - description: Search Medicalfile
        in: query
        name: Medicalfile
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Medicalfile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a Medicalfile entity by Search
  /searchqueues:
    get:
      description: get queue by Search
      operationId: get-Queue-by-search
      parameters:
      - description: Search Queue
        in: query
        name: Queue
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Queue'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a Queue entity by Search
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
