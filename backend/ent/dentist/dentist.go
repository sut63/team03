// Code generated by entc, DO NOT EDIT.

package dentist

const (
	// Label holds the string label denoting the dentist type in the database.
	Label = "dentist"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "age"
	// FieldCardid holds the string denoting the cardid field in the database.
	FieldCardid = "cardid"
	// FieldBirthday holds the string denoting the birthday field in the database.
	FieldBirthday = "birthday"
	// FieldExperience holds the string denoting the experience field in the database.
	FieldExperience = "experience"
	// FieldTel holds the string denoting the tel field in the database.
	FieldTel = "tel"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"

	// EdgeNurse holds the string denoting the nurse edge name in mutations.
	EdgeNurse = "nurse"
	// EdgeDegree holds the string denoting the degree edge name in mutations.
	EdgeDegree = "degree"
	// EdgeExpert holds the string denoting the expert edge name in mutations.
	EdgeExpert = "expert"
	// EdgeGender holds the string denoting the gender edge name in mutations.
	EdgeGender = "gender"
	// EdgeMedicalfiles holds the string denoting the medicalfiles edge name in mutations.
	EdgeMedicalfiles = "medicalfiles"
	// EdgeQueue holds the string denoting the queue edge name in mutations.
	EdgeQueue = "queue"
	// EdgeAppointment holds the string denoting the appointment edge name in mutations.
	EdgeAppointment = "appointment"

	// Table holds the table name of the dentist in the database.
	Table = "dentists"
	// NurseTable is the table the holds the nurse relation/edge.
	NurseTable = "dentists"
	// NurseInverseTable is the table name for the Nurse entity.
	// It exists in this package in order to avoid circular dependency with the "nurse" package.
	NurseInverseTable = "nurses"
	// NurseColumn is the table column denoting the nurse relation/edge.
	NurseColumn = "nurse_id"
	// DegreeTable is the table the holds the degree relation/edge.
	DegreeTable = "dentists"
	// DegreeInverseTable is the table name for the Degree entity.
	// It exists in this package in order to avoid circular dependency with the "degree" package.
	DegreeInverseTable = "degrees"
	// DegreeColumn is the table column denoting the degree relation/edge.
	DegreeColumn = "degree_id"
	// ExpertTable is the table the holds the expert relation/edge.
	ExpertTable = "dentists"
	// ExpertInverseTable is the table name for the Expert entity.
	// It exists in this package in order to avoid circular dependency with the "expert" package.
	ExpertInverseTable = "experts"
	// ExpertColumn is the table column denoting the expert relation/edge.
	ExpertColumn = "expert_id"
	// GenderTable is the table the holds the gender relation/edge.
	GenderTable = "dentists"
	// GenderInverseTable is the table name for the Gender entity.
	// It exists in this package in order to avoid circular dependency with the "gender" package.
	GenderInverseTable = "genders"
	// GenderColumn is the table column denoting the gender relation/edge.
	GenderColumn = "gender_id"
	// MedicalfilesTable is the table the holds the medicalfiles relation/edge.
	MedicalfilesTable = "medicalfiles"
	// MedicalfilesInverseTable is the table name for the Medicalfile entity.
	// It exists in this package in order to avoid circular dependency with the "medicalfile" package.
	MedicalfilesInverseTable = "medicalfiles"
	// MedicalfilesColumn is the table column denoting the medicalfiles relation/edge.
	MedicalfilesColumn = "dentist_id"
	// QueueTable is the table the holds the queue relation/edge.
	QueueTable = "queues"
	// QueueInverseTable is the table name for the Queue entity.
	// It exists in this package in order to avoid circular dependency with the "queue" package.
	QueueInverseTable = "queues"
	// QueueColumn is the table column denoting the queue relation/edge.
	QueueColumn = "dentist_id"
	// AppointmentTable is the table the holds the appointment relation/edge.
	AppointmentTable = "appointments"
	// AppointmentInverseTable is the table name for the Appointment entity.
	// It exists in this package in order to avoid circular dependency with the "appointment" package.
	AppointmentInverseTable = "appointments"
	// AppointmentColumn is the table column denoting the appointment relation/edge.
	AppointmentColumn = "dentist_id"
)

// Columns holds all SQL columns for dentist fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldAge,
	FieldCardid,
	FieldBirthday,
	FieldExperience,
	FieldTel,
	FieldEmail,
	FieldPassword,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Dentist type.
var ForeignKeys = []string{
	"degree_id",
	"expert_id",
	"gender_id",
	"nurse_id",
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// AgeValidator is a validator for the "age" field. It is called by the builders before save.
	AgeValidator func(int) error
	// CardidValidator is a validator for the "cardid" field. It is called by the builders before save.
	CardidValidator func(string) error
	// ExperienceValidator is a validator for the "experience" field. It is called by the builders before save.
	ExperienceValidator func(string) error
	// TelValidator is a validator for the "tel" field. It is called by the builders before save.
	TelValidator func(string) error
	// EmailValidator is a validator for the "email" field. It is called by the builders before save.
	EmailValidator func(string) error
	// PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	PasswordValidator func(string) error
)
