// Code generated by entc, DO NOT EDIT.

package appointment

const (
	// Label holds the string label denoting the appointment type in the database.
	Label = "appointment"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAppointID holds the string denoting the appointid field in the database.
	FieldAppointID = "appoint_id"
	// FieldDetail holds the string denoting the detail field in the database.
	FieldDetail = "detail"
	// FieldDatetime holds the string denoting the datetime field in the database.
	FieldDatetime = "datetime"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"

	// EdgePatient holds the string denoting the patient edge name in mutations.
	EdgePatient = "patient"
	// EdgeRoom holds the string denoting the room edge name in mutations.
	EdgeRoom = "room"
	// EdgeDentist holds the string denoting the dentist edge name in mutations.
	EdgeDentist = "dentist"
	// EdgeNurse holds the string denoting the nurse edge name in mutations.
	EdgeNurse = "nurse"

	// Table holds the table name of the appointment in the database.
	Table = "appointments"
	// PatientTable is the table the holds the patient relation/edge.
	PatientTable = "appointments"
	// PatientInverseTable is the table name for the Patient entity.
	// It exists in this package in order to avoid circular dependency with the "patient" package.
	PatientInverseTable = "patients"
	// PatientColumn is the table column denoting the patient relation/edge.
	PatientColumn = "patient_id"
	// RoomTable is the table the holds the room relation/edge.
	RoomTable = "appointments"
	// RoomInverseTable is the table name for the Room entity.
	// It exists in this package in order to avoid circular dependency with the "room" package.
	RoomInverseTable = "rooms"
	// RoomColumn is the table column denoting the room relation/edge.
	RoomColumn = "room_id"
	// DentistTable is the table the holds the dentist relation/edge.
	DentistTable = "appointments"
	// DentistInverseTable is the table name for the Dentist entity.
	// It exists in this package in order to avoid circular dependency with the "dentist" package.
	DentistInverseTable = "dentists"
	// DentistColumn is the table column denoting the dentist relation/edge.
	DentistColumn = "dentist_id"
	// NurseTable is the table the holds the nurse relation/edge.
	NurseTable = "appointments"
	// NurseInverseTable is the table name for the Nurse entity.
	// It exists in this package in order to avoid circular dependency with the "nurse" package.
	NurseInverseTable = "nurses"
	// NurseColumn is the table column denoting the nurse relation/edge.
	NurseColumn = "nurse_appointment"
)

// Columns holds all SQL columns for appointment fields.
var Columns = []string{
	FieldID,
	FieldAppointID,
	FieldDetail,
	FieldDatetime,
	FieldRemark,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Appointment type.
var ForeignKeys = []string{
	"dentist_id",
	"nurse_appointment",
	"patient_id",
	"room_id",
}

var (
	// AppointIDValidator is a validator for the "AppointID" field. It is called by the builders before save.
	AppointIDValidator func(string) error
	// DetailValidator is a validator for the "Detail" field. It is called by the builders before save.
	DetailValidator func(string) error
	// RemarkValidator is a validator for the "Remark" field. It is called by the builders before save.
	RemarkValidator func(string) error
)
