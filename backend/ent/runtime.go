// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/tanapon395/playlist-video/ent/appointment"
	"github.com/tanapon395/playlist-video/ent/degree"
	"github.com/tanapon395/playlist-video/ent/dentist"
	"github.com/tanapon395/playlist-video/ent/disease"
	"github.com/tanapon395/playlist-video/ent/expert"
	"github.com/tanapon395/playlist-video/ent/gender"
	"github.com/tanapon395/playlist-video/ent/medicalcare"
	"github.com/tanapon395/playlist-video/ent/medicalfile"
	"github.com/tanapon395/playlist-video/ent/nurse"
	"github.com/tanapon395/playlist-video/ent/patient"
	"github.com/tanapon395/playlist-video/ent/room"
	"github.com/tanapon395/playlist-video/ent/schema"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	appointmentFields := schema.Appointment{}.Fields()
	_ = appointmentFields
	// appointmentDescDetail is the schema descriptor for detail field.
	appointmentDescDetail := appointmentFields[0].Descriptor()
	// appointment.DetailValidator is a validator for the "detail" field. It is called by the builders before save.
	appointment.DetailValidator = appointmentDescDetail.Validators[0].(func(string) error)
	degreeFields := schema.Degree{}.Fields()
	_ = degreeFields
	// degreeDescDegreeName is the schema descriptor for degree_name field.
	degreeDescDegreeName := degreeFields[0].Descriptor()
	// degree.DegreeNameValidator is a validator for the "degree_name" field. It is called by the builders before save.
	degree.DegreeNameValidator = degreeDescDegreeName.Validators[0].(func(string) error)
	dentistFields := schema.Dentist{}.Fields()
	_ = dentistFields
	// dentistDescName is the schema descriptor for name field.
	dentistDescName := dentistFields[0].Descriptor()
	// dentist.NameValidator is a validator for the "name" field. It is called by the builders before save.
	dentist.NameValidator = dentistDescName.Validators[0].(func(string) error)
	// dentistDescAge is the schema descriptor for age field.
	dentistDescAge := dentistFields[1].Descriptor()
	// dentist.AgeValidator is a validator for the "age" field. It is called by the builders before save.
	dentist.AgeValidator = dentistDescAge.Validators[0].(func(int) error)
	// dentistDescCardid is the schema descriptor for cardid field.
	dentistDescCardid := dentistFields[2].Descriptor()
	// dentist.CardidValidator is a validator for the "cardid" field. It is called by the builders before save.
	dentist.CardidValidator = dentistDescCardid.Validators[0].(func(string) error)
	// dentistDescExperience is the schema descriptor for experience field.
	dentistDescExperience := dentistFields[4].Descriptor()
	// dentist.ExperienceValidator is a validator for the "experience" field. It is called by the builders before save.
	dentist.ExperienceValidator = dentistDescExperience.Validators[0].(func(string) error)
	// dentistDescTel is the schema descriptor for tel field.
	dentistDescTel := dentistFields[5].Descriptor()
	// dentist.TelValidator is a validator for the "tel" field. It is called by the builders before save.
	dentist.TelValidator = dentistDescTel.Validators[0].(func(string) error)
	// dentistDescEmail is the schema descriptor for email field.
	dentistDescEmail := dentistFields[6].Descriptor()
	// dentist.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	dentist.EmailValidator = dentistDescEmail.Validators[0].(func(string) error)
	// dentistDescPassword is the schema descriptor for password field.
	dentistDescPassword := dentistFields[7].Descriptor()
	// dentist.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	dentist.PasswordValidator = dentistDescPassword.Validators[0].(func(string) error)
	diseaseFields := schema.Disease{}.Fields()
	_ = diseaseFields
	// diseaseDescName is the schema descriptor for name field.
	diseaseDescName := diseaseFields[0].Descriptor()
	// disease.NameValidator is a validator for the "name" field. It is called by the builders before save.
	disease.NameValidator = diseaseDescName.Validators[0].(func(string) error)
	expertFields := schema.Expert{}.Fields()
	_ = expertFields
	// expertDescExpertName is the schema descriptor for expert_name field.
	expertDescExpertName := expertFields[0].Descriptor()
	// expert.ExpertNameValidator is a validator for the "expert_name" field. It is called by the builders before save.
	expert.ExpertNameValidator = expertDescExpertName.Validators[0].(func(string) error)
	genderFields := schema.Gender{}.Fields()
	_ = genderFields
	// genderDescName is the schema descriptor for name field.
	genderDescName := genderFields[0].Descriptor()
	// gender.NameValidator is a validator for the "name" field. It is called by the builders before save.
	gender.NameValidator = genderDescName.Validators[0].(func(string) error)
	medicalcareFields := schema.MedicalCare{}.Fields()
	_ = medicalcareFields
	// medicalcareDescName is the schema descriptor for name field.
	medicalcareDescName := medicalcareFields[0].Descriptor()
	// medicalcare.NameValidator is a validator for the "name" field. It is called by the builders before save.
	medicalcare.NameValidator = medicalcareDescName.Validators[0].(func(string) error)
	medicalfileFields := schema.Medicalfile{}.Fields()
	_ = medicalfileFields
	// medicalfileDescDetail is the schema descriptor for detail field.
	medicalfileDescDetail := medicalfileFields[0].Descriptor()
	// medicalfile.DetailValidator is a validator for the "detail" field. It is called by the builders before save.
	medicalfile.DetailValidator = medicalfileDescDetail.Validators[0].(func(string) error)
	nurseFields := schema.Nurse{}.Fields()
	_ = nurseFields
	// nurseDescNurseName is the schema descriptor for nurse_name field.
	nurseDescNurseName := nurseFields[0].Descriptor()
	// nurse.NurseNameValidator is a validator for the "nurse_name" field. It is called by the builders before save.
	nurse.NurseNameValidator = nurseDescNurseName.Validators[0].(func(string) error)
	patientFields := schema.Patient{}.Fields()
	_ = patientFields
	// patientDescPatientID is the schema descriptor for patient_ID field.
	patientDescPatientID := patientFields[0].Descriptor()
	// patient.PatientIDValidator is a validator for the "patient_ID" field. It is called by the builders before save.
	patient.PatientIDValidator = patientDescPatientID.Validators[0].(func(string) error)
	// patientDescName is the schema descriptor for name field.
	patientDescName := patientFields[1].Descriptor()
	// patient.NameValidator is a validator for the "name" field. It is called by the builders before save.
	patient.NameValidator = patientDescName.Validators[0].(func(string) error)
	// patientDescCardID is the schema descriptor for cardID field.
	patientDescCardID := patientFields[2].Descriptor()
	// patient.CardIDValidator is a validator for the "cardID" field. It is called by the builders before save.
	patient.CardIDValidator = patientDescCardID.Validators[0].(func(string) error)
	// patientDescTel is the schema descriptor for tel field.
	patientDescTel := patientFields[3].Descriptor()
	// patient.TelValidator is a validator for the "tel" field. It is called by the builders before save.
	patient.TelValidator = patientDescTel.Validators[0].(func(string) error)
	// patientDescAge is the schema descriptor for age field.
	patientDescAge := patientFields[4].Descriptor()
	// patient.AgeValidator is a validator for the "age" field. It is called by the builders before save.
	patient.AgeValidator = patientDescAge.Validators[0].(func(int) error)
	roomFields := schema.Room{}.Fields()
	_ = roomFields
	// roomDescName is the schema descriptor for name field.
	roomDescName := roomFields[0].Descriptor()
	// room.NameValidator is a validator for the "name" field. It is called by the builders before save.
	room.NameValidator = roomDescName.Validators[0].(func(string) error)
}
