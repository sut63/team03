// Code generated by entc, DO NOT EDIT.

package medicalfile

const (
	// Label holds the string label denoting the medicalfile type in the database.
	Label = "medicalfile"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDetail holds the string denoting the detail field in the database.
	FieldDetail = "detail"
	// FieldAddedTime holds the string denoting the added_time field in the database.
	FieldAddedTime = "added_time"

	// EdgeDentist holds the string denoting the dentist edge name in mutations.
	EdgeDentist = "dentist"
	// EdgePatient holds the string denoting the patient edge name in mutations.
	EdgePatient = "patient"
	// EdgeNurse holds the string denoting the nurse edge name in mutations.
	EdgeNurse = "nurse"
	// EdgeMedicalcare holds the string denoting the medicalcare edge name in mutations.
	EdgeMedicalcare = "medicalcare"
	// EdgeDentalexpenses holds the string denoting the dentalexpenses edge name in mutations.
	EdgeDentalexpenses = "dentalexpenses"

	// Table holds the table name of the medicalfile in the database.
	Table = "medicalfiles"
	// DentistTable is the table the holds the dentist relation/edge.
	DentistTable = "medicalfiles"
	// DentistInverseTable is the table name for the Dentist entity.
	// It exists in this package in order to avoid circular dependency with the "dentist" package.
	DentistInverseTable = "dentists"
	// DentistColumn is the table column denoting the dentist relation/edge.
	DentistColumn = "dentist_id"
	// PatientTable is the table the holds the patient relation/edge.
	PatientTable = "medicalfiles"
	// PatientInverseTable is the table name for the Patient entity.
	// It exists in this package in order to avoid circular dependency with the "patient" package.
	PatientInverseTable = "patients"
	// PatientColumn is the table column denoting the patient relation/edge.
	PatientColumn = "patient_id"
	// NurseTable is the table the holds the nurse relation/edge.
	NurseTable = "medicalfiles"
	// NurseInverseTable is the table name for the Nurse entity.
	// It exists in this package in order to avoid circular dependency with the "nurse" package.
	NurseInverseTable = "nurses"
	// NurseColumn is the table column denoting the nurse relation/edge.
	NurseColumn = "nurse_id"
	// MedicalcareTable is the table the holds the medicalcare relation/edge.
	MedicalcareTable = "medicalfiles"
	// MedicalcareInverseTable is the table name for the MedicalCare entity.
	// It exists in this package in order to avoid circular dependency with the "medicalcare" package.
	MedicalcareInverseTable = "medical_cares"
	// MedicalcareColumn is the table column denoting the medicalcare relation/edge.
	MedicalcareColumn = "medicalcare_id"
	// DentalexpensesTable is the table the holds the dentalexpenses relation/edge.
	DentalexpensesTable = "dental_expenses"
	// DentalexpensesInverseTable is the table name for the DentalExpense entity.
	// It exists in this package in order to avoid circular dependency with the "dentalexpense" package.
	DentalexpensesInverseTable = "dental_expenses"
	// DentalexpensesColumn is the table column denoting the dentalexpenses relation/edge.
	DentalexpensesColumn = "medicalfile_id"
)

// Columns holds all SQL columns for medicalfile fields.
var Columns = []string{
	FieldID,
	FieldDetail,
	FieldAddedTime,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Medicalfile type.
var ForeignKeys = []string{
	"dentist_id",
	"medicalcare_id",
	"nurse_id",
	"patient_id",
}

var (
	// DetailValidator is a validator for the "detail" field. It is called by the builders before save.
	DetailValidator func(string) error
)
