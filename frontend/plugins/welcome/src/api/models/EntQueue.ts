/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntQueueEdges,
    EntQueueEdgesFromJSON,
    EntQueueEdgesFromJSONTyped,
    EntQueueEdgesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntQueue
 */
export interface EntQueue {
    /**
     * Dental holds the value of the "Dental" field.
     * @type {string}
     * @memberof EntQueue
     */
    dental?: string;
    /**
     * Phone holds the value of the "Phone" field.
     * @type {string}
     * @memberof EntQueue
     */
    phone?: string;
    /**
     * QueueID holds the value of the "QueueID" field.
     * @type {string}
     * @memberof EntQueue
     */
    queueID?: string;
    /**
     * QueueTime holds the value of the "QueueTime" field.
     * @type {string}
     * @memberof EntQueue
     */
    queueTime?: string;
    /**
     * 
     * @type {EntQueueEdges}
     * @memberof EntQueue
     */
    edges?: EntQueueEdges;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntQueue
     */
    id?: number;
}

export function EntQueueFromJSON(json: any): EntQueue {
    return EntQueueFromJSONTyped(json, false);
}

export function EntQueueFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntQueue {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dental': !exists(json, 'Dental') ? undefined : json['Dental'],
        'phone': !exists(json, 'Phone') ? undefined : json['Phone'],
        'queueID': !exists(json, 'QueueID') ? undefined : json['QueueID'],
        'queueTime': !exists(json, 'QueueTime') ? undefined : json['QueueTime'],
        'edges': !exists(json, 'edges') ? undefined : EntQueueEdgesFromJSON(json['edges']),
        'id': !exists(json, 'id') ? undefined : json['id'],
    };
}

export function EntQueueToJSON(value?: EntQueue | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Dental': value.dental,
        'Phone': value.phone,
        'QueueID': value.queueID,
        'QueueTime': value.queueTime,
        'edges': EntQueueEdgesToJSON(value.edges),
        'id': value.id,
    };
}


